version: '3.9'
services:
  db:
    image: postgres
    ports:
    - "5432:5432"
    build: {
      context: /db,
      dockerfile: dockerfile
    }
    volumes:
      - dbdata:/var/lib/postgresql/data
    restart: always
    networks:
      - net
    environment:
      - POSTGRES_DB=links
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: db
  rmq:
    image: rabbitmq:management
    ports:
      - "15672:15672"
    networks:
      - net
    hostname: rmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - RABBITMQ_DEFAULT_USER=myname
      - RABBITMQ_DEFAULT_PASS=321
    container_name: rmq
  loader:
    build:
      context: /loader
      dockerfile: dockerfile
    restart: on-failure
    networks:
      - net
    depends_on:
      - rmq
    environment:
      - user=myname
      - pass=321
    container_name: loader
  server:
    image: server
    ports:
      - "3000:3000"
    build: {
      context: /server,
      dockerfile: dockerfile
    }
    networks:
      - net
    depends_on:
      - db
      - rmq
    environment:
      - dbName=links
      - dbUser=postgres
      - dbPass=postgres
      - dbPort=5432
      - dbHost=db
    container_name: server
networks:
  net:
    driver: bridge
volumes:
  dbdata: